

I = [57;12;60;39;1;14;26;56];
%T = [de2bi(I-1),zeros(8,1)];
T = fliplr([de2bi(I-1)]);
%T = [de2bi(I-1)];
Binary = [T(1,:),T(2,:),T(3,:),T(4,:),T(5,:),T(6,:),T(7,:),T(8,:)];
key64 = ones(1,64)*4;
key56 = ones(1,56)*3;

PC1L = [57	49	41	33	25	17	9 ...
        1	58	50	42	34	26	18 ...
        10	2	59	51	43	35	27 ...
        19	11	3	60	52	44	36];
PC1R = [63	55	47	39	31	23	15 ...
        7	62	54	46	38	30	22 ... 
        14	6	61	53	45	37	29 ...
        21	13	5	28	20	12	4];
    
PC2 = [14 17	11	24	1	5	3	28 ...
         15	6	21	10	23	19	12	4 ...
         26	8	16	7	27	20	13	2 ...
         41	52	31	37	47	55	30	40 ...
         51	45	33	48	44	49	39	56 ...
         34	53	46	42	50	36	29	32];

rshift = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,1,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,29];

for i = 1:48
    key56(PC2(i)) = Binary(i);
end
key56(9)=2;
key56(18)=2;
key56(22)=2;
key56(25)=2;
key56(35)=2;
key56(38)=2;
key56(43)=2;
key56(54)=2;

for i = 1:56
    key56b(rshift(i)) = key56(i);
end

for i = 1:28
    key64(PC1L(i)) = key56b(i);
    key64(PC1R(i)) = key56b(i+28);
end

keytest = [0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 1];



%%test possible keys
bits = [1:256];
bits = [0 1 0 0 1 0 0 1];
%bits = [0 0 0 0 0 0 0 0];
for i = 1:1
    keytest(8) = bits(i,1);
    keytest(16) = bits(i,2); 
    keytest(24) = bits(i,3);
    keytest(32) = bits(i,4);
    keytest(40) = bits(i,5);
    keytest(48) = bits(i,6);
    keytest(56) = bits(i,7);
    keytest(64) = bits(i,8);
    success = TestKey(keytest);
    if 1 == success
        break
    end
end
 key = log2hex(keytest)
